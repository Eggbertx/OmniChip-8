#ifndef TESTING_ROMS_H
#define TESTING_ROMS_H

#include "../chip8.h"

uchar rom_omnichip8[] = {
	0xa2, 0x4e, 0x60, 0x0f, 0x61, 0x07, 0x62, 0x08, 0xd0, 0x18, 0x70, 0x08,
	0xf2, 0x1e, 0xd0, 0x18, 0x70, 0x09, 0xf2, 0x1e, 0xd0, 0x18, 0x70, 0x08,
	0xf2, 0x1e, 0xd0, 0x18, 0x70, 0x08, 0xf2, 0x1e, 0xa2, 0x6e, 0x60, 0x09,
	0x61, 0x11, 0x62, 0x08, 0xd0, 0x18, 0x70, 0x08, 0xf2, 0x1e, 0xd0, 0x18,
	0x70, 0x08, 0xf2, 0x1e, 0xd0, 0x18, 0x70, 0x08, 0xf2, 0x1e, 0xd0, 0x18,
	0x70, 0x06, 0xf2, 0x1e, 0xd0, 0x18, 0x70, 0x06, 0xf2, 0x1e, 0xd0, 0x18,
	0x70, 0x04, 0xf2, 0x1e, 0x12, 0x4c, 0x3e, 0x41, 0x41, 0x41, 0x41, 0x41,
	0x41, 0x3e, 0x41, 0x63, 0x55, 0x49, 0x41, 0x41, 0x41, 0x41, 0x81, 0xc1,
	0xa1, 0x91, 0x89, 0x85, 0x83, 0x81, 0x7f, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x7f, 0x3e, 0x41, 0x40, 0x40, 0x40, 0x40, 0x41, 0x3e, 0x41, 0x41,
	0x41, 0x7f, 0x41, 0x41, 0x41, 0x41, 0x7f, 0x08, 0x08, 0x08, 0x08, 0x08,
	0x08, 0x7f, 0x3e, 0x41, 0x41, 0x41, 0x7e, 0x40, 0x40, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x3e, 0x41, 0x41, 0x3e, 0x41, 0x41,
	0x41, 0x3e
};
const ushort rom_omnichip8_size = 158;

uchar rom_blankScreen[] = {
	0x00, 0xe0
};
const ushort rom_blankScreen_size = 2;

uchar rom_call_return[] = {
	0x22, 0x04, 0x12, 0x00, 0x00, 0xee
};
const ushort rom_call_return_size = 6;

uchar rom_jump_return[] = {
	0x12, 0x04, 0x00, 0xee
};
const ushort rom_jump_return_size = 4;

uchar rom_ld_se_sne[] = {
	0x61, 0xab, 0x31, 0xab, 0x61, 0xab, 0x61, 0xaa, 0x31, 0xab, 0x61, 0xab,
	0x41, 0xab, 0x61, 0xaa, 0x51, 0x20, 0x00, 0xe0, 0x91, 0x20, 0x00, 0xe0,
	0x61, 0x01, 0x80, 0x80
};
const ushort rom_ld_se_sne_size = 28;

uchar rom_add[] = {
	0x60, 0x01, 0x61, 0x01, 0x70, 0x01, 0x80, 0x14, 0x61, 0xff, 0x80, 0x14
};
const ushort rom_add_size = 12;

uchar rom_and_or_xor[] = {
	0x60, 0x80, 0x61, 0x01, 0x80, 0x11, 0x61, 0xf0, 0x80, 0x12, 0x61, 0x40,
	0x80, 0x13, 0x80, 0x13
};
const ushort rom_and_or_xor_size = 16;

#endif